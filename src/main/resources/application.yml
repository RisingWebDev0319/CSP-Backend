# ===============================
# = SERVER
# ===============================

SERVER_FRONTEND: http://localhost:8080

version: '0.7.5'

server:
  context-path: '/api'
  version: ${version}
  port: 9090
  job:
    cron: '0 0 1 * * ?'
    zone: 'GMT+3'
  frontend: ${SERVER_FRONTEND}


# ===============================
# = TIME MANAGMENT
# ===============================


time:
    token:
      unit: DAYS
      value: 7

    passwordKey:
      unit: HOURS
      value: 12



# ===============================
# = EMAIL
# ===============================

EMAIL_HOST: the-diabetes-cure.netfirms.com

email:
    host: ${EMAIL_HOST}
    port: 587
    from: 'FreshStart TEAM'
    username: admin@fsportal.ca
    password: Test123!
    template:
        therapistAvailabilityRequests: 'You have availability request. Please visit the link below and approve or decline it. <a href="#link">#link</a>'
        therapistEmail: 'FreshStart notification for therapist'


# JPA
# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/netgloo_blog?useSSL=false

# Username and password
#spring.datasource.username = root
#spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql: true


#Command line configuration database
db:
  port: 5432
  host: localhost
  name: csp
  user: csp
  pass: 9A6k3F6m

# PID
spring:
  pid:
    fail-on-write-error1: false
    file1: /home/dev/projects/csp-app.pid
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${db.host}:${db.port}/${db.name}
    username: ${db.user}
    password: ${db.pass}
  jpa:
    generate-ddl: true
#   show-sql is worst debugging
#    show-sql: true
#    hibernate:
#      ddl-auto: create-drop # recreate the database on startup
#      ddl-auto: create
#      ddl-auto: validate

# ===============================
# = NetSuite
# ===============================
netSuite:
  apiKey: '5994802942ae9901'
  apiEndpoint: 'https://forms.netsuite.com/app/site/hosting/scriptlet.nl?script=61&deploy=1&compid=879421&h=4342265a7228292c3614'

# ===============================
# = WebSockets
# ===============================
ws:
  stompEndpoint: '/portal-stomp'

spring.jpa.properties.hibernate.show_sql: false
spring.jpa.properties.hibernate.use_sql_comments: true
spring.jpa.properties.hibernate.format_sql: true
#spring.jpa.properties.hibernate.type: trace  #uncommit to show sql values
